{
  "$id":"https://raw.githubusercontent.com/SPINEProject/SPINE-json-schema/master/schemas/core.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SPINE Core",
  "TODOS": [
    "TODO #1. Filter schema is to be defined.",
    "TODO #2. Metadata schema is to be defined.",
    "TODO #3. Reference schema is to be defined.",
    "TODO #4. lookuptable schema has to be improved"
  ],
    "QUESTIONS":[
    "Q #1. ALF - As we don't deal anymore with T1 or T2 images, instead we deal with filters, can we set the imageEntityIO_Type as Anatomical, Functional, DWI, DiscreteLabelMap, ProbabilisticLabelMap?",
    "Q #2. ALF - spineTypeInOut schema - What is the lookuptable created for? In this a file, e.g, json file?",
    "Q #3. ALF - spineTypeInOut schema - If we have imageEntity as a spineTypeInOut, can we have visit or clinical variables as spineType? Does it make sense?",
    "Q #4. ALF - spineTypeInOut schema - If the input is a list, for instance a list of imageEntity, how can we handle different types of formats? For instance if some come in .gz but others in nii.gz.",
    "Q #5. ALF - spineTypeInOut schema - I feel idInDescriptor in the spineInput/spineOutput can actually only be used in task and workflow. I am trying to use it in the tool but I don't have that property. I propose to remove it from the definition and create an extended defintion. An example of extention is in tool.schema.json/#definitions/inputsAnnotationTool"
  ],
  "definitions": {

    "privacy":{
      "$id" : "#privacy",
      "description": "Possible privacy options",
      "type": "string",
      "enum": ["PUBLIC", "PRIVATE"]
    },

    "privacyProject":{
      "$id" : "#privacyProject",
      "description": "Possible privacy options for a project.",
      "type": "string",
      "enum": ["PUBLIC", "PRIVATE_ONLY_SPINE_USERS", "PRIVATE_ONLY_PROJECT_USERS"]
    },

    "privacyExperiment":{
      "$id" : "#privacyExperiment",
      "description": "Possible privacy options for an experiment. This cannot overwrite the privacy of the project or be less flexible than the project privacy.",
      "type": "string",
      "enum": ["PUBLIC", "PRIVATE_ONLY_SPINE_USERS", "PRIVATE_ONLY_PROJECT_USERS"]
    },

    "spineTypeInOut": {
      "$id" : "#spineTypeInOut",
      "description": "SPINE Type",
      "type": "string",
      "enum": ["String","Number","imageFileInOut","imageEntityInOut",
        "auxiliaryImageFile","lookupTableInOut","roiInOut","annotationInOut",
        "roiWithAnnotationsInOut","annotationTableDefinitionInOut"]
    },

    "inputOutput": {
      "$id" : "#inputOutput",
      "description": "Definition of a general input or output",
      "type": "object",
      "properties": {
        "name": {
          "description":"Human readable name for the input/output",
          "type":"string"
        },
        "description": {
          "description":"Human readable description for the input/output",
          "type":"string"
        },
        "isList": {
          "description":"True if the input/output is a list.",
          "type":"boolean"
        },
        "type": {
          "description":"Type of the input/output",
          "type":"string"
        }
      },
      "required": ["name","description","isList","type"]
    },

    "inputOutput_spine":{
      "$id" : "#inputOutput_spine",
      "description": "Specialization of inputOutput for SPINE",
      "allOf":[
        {"$ref": "#/definitions/inputOutput"},
        {
          "properties": {
            "type":{
              "$ref": "#/definitions/spineTypeInOut"
            }
          },
          "required": ["type"]
        }
      ]
    },

    "String": {
      "$id": "#String",
      "description": "Schema defining String as input or output",
      "allOf":[
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["String"]
            }
          },
          "required": ["type"]
        }
      ]
    },

    "Number": {
      "$id": "#Number",
      "description": "Schema defining Number as input or output",
      "allOf":[
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["Number"]
            }
          },
          "required": ["type"]
        }
      ]
    },

    "imageFileInOut_Type": {
      "$id" : "#imageFileInOut_Type",
      "description": "SPINE Image Type for imageFile",
      "type": "string",
      "enum": ["T1w","T2w","T2star","T1map","T2map", "FLAIR", "PDT2","PDmap",
        "ANATOMICAL", "FUNCTIONAL", "DWI","DiscreteLabelMap","ProbabilisticLabelMap"]
    },

    "imageFileInOut_FileFormat": {
      "$id" : "#imageFileInOut_FileFormat",
      "description": "Format of the file for the image file",
      "type": "string",
      "enum": ["nii","nii.gz","dicom.gz","minc","nrrd","dicom"]
    },

    "imageFileInOut": {
      "$id": "#imageFileInOut",
      "description": "Schema defining an image file as input or output",
      "allOf":[
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["imageFileInOut"]
            },
            "imageFileInOut_Type": {
              "$ref": "#/definitions/imageFileInOut_Type"
            },
            "imageFileInOut_FileFormat":{
              "$ref": "#/definitions/imageFileInOut_FileFormat"
            }
          },
          "required": ["type","imageFileInOut_Type","imageFileInOut_FileFormat"]
        }
      ]
    },

    "annotationTableDefinitionInOut": {
      "$id": "#annotationTableDefinitionInOut",
      "description": "Schema defining an annotation table definition as input output",
      "allOf":[
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["annotationTableDefinitionInOut"]
            }
          },
          "required": ["type"]
        }
      ]
    },

    "annotationTableDataInOut": {
      "$id": "#annotationTableDataInOut",
      "description": "Schema defining an annotation table data as input output",
      "allOf":[
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["annotationTableDataInOut"]
            }
          },
          "required": ["type"]
        }
      ]
    },

    "lookupTableInOut_FileFormat": {
      "$id" : "#lookupTableInOut_Type",
      "description": "File format for lookup tables",
      "type": "string",
      "enum": ["txt","tmf", "json"]
    },

    "lookupTableInOut": {
      "$id": "#lookupTableInOut",
      "description": "Schema defining an lookup table as input or output",
      "allOf":[
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["lookupTableInOut"]
            },
            "lookupTableInOut_FileFormat": {
              "$ref": "#/definitions/lookupTableInOut_FileFormat"
            }
          },
          "required": ["type","lookupTableInOut_FileFormat"]
        }
      ]
    },

    "imageEntityInOut_Type": {
      "$id" : "#imageEntityInOut_Type",
      "description": "SPINE Image Type for imageEntity",
      "type": "string",
      "enum": ["T1w","T2w","T2star","T1map","T2map", "FLAIR", "PDT2","PDmap",
        "ANATOMICAL", "FUNCTIONAL", "DWI","DiscreteLabelMap","ProbabilisticLabelMap"]
    },

    "imageEntityInOut_FileFormat": {
      "$id" : "#imageEntityInOut_FileFormat",
      "description": "Format of the file where an image entity is or can be stored",
      "type": "string",
      "enum": ["nii","nii.gz","dicom.gz","minc","nrrd","dicom"]
    },

    "imageEntityInOut": {
      "$id": "#imageEntityInOut",
      "description": "Schema defining an image entity as input or output",
      "allOf":[
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["imageEntityInOut"]
            },
            "imageEntityInOut_Type": {
              "$ref": "#/definitions/imageEntityInOut_Type"
            },
            "imageEntityInOut_FileFormat":{
              "description": "This format of the file is not required as in the case of a list of EntityImages, each EntityImages can have its own format.",
              "$ref": "#/definitions/imageEntityInOut_FileFormat"
            }
          },
          "required": ["type","imageEntityInOut_Type"]
        }
      ]
    },

    "auxiliaryImageFileType": {
      "$id" : "#auxiliaryImageFileType",
      "description": "SPINE Aux. Image Type",
      "type": "string",
      "enum": ["bvec","bval"]
    },

    "auxiliaryImageFileFormat": {
      "$id" : "#auxiliaryImageFileFormat",
      "description": "Possible formats of auxialiary image files",
      "type": "string",
      "enum": ["txt","tmf", "json"]
    },

    "auxiliaryImageFile": {
      "$id": "#auxiliaryImageFile",
      "description": "Schema defining an auxiliary image file as input or output",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["auxiliaryImageFile"]
            },
            "auxiliaryImageFileType": {
              "$ref": "#/definitions/auxiliaryImageFileType"
            },
            "auxiliaryImageFileFormat": {
              "$ref": "#/definitions/auxiliaryImageFileFormat"
            }
          },
          "required": ["type","auxiliaryImageFileType","auxiliaryImageFileFormat"]
        }
      ]
    },

    "roiInOut_FileFormat": {
      "$id" : "#roiInOut_FileFormat",
      "description": "Possible formats of ROI in and outputs files",
      "type": "string",
      "enum": ["json"]
    },

    "roiInOut":{
      "$id": "#roiInOut",
      "description": "Schema defining an ROI as input or output",
      "allOf": [
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "type": "object",
          "properties": {
            "type":{
              "type": "string",
              "enum": ["roiInOut"]
            },
            "schema":{
              "description": "Schema to be used for the format of the ROI",
              "type": "string",
              "enum": ["https://raw.githubusercontent.com/SPINEProject/SPINE-json-schema/master/schemas/roi.schema.json"]
            },
            "roiInOut_FileFormat": {
              "$ref": "#/definitions/roiInOut_FileFormat"
            }
          },
          "required": ["type","schema","roiInOut_FileFormat"]
        }
      ]
    },

    "annotationInOut_FileFormat": {
      "$id" : "#annotationInOut_FileFormat",
      "description": "Possible formats of annotation in and outputs files",
      "type": "string",
      "enum": ["json"]
    },

    "annotationInOut":{
      "$id": "#annotationInOut",
      "description": "Schema defining an annotation as input or output",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["annotationInOut"]
            },
            "annotation": {
              "$ref": "annotation.schema.json"
            }
          },
          "required": ["type","annotation"]
        }
      ]
    },

    "roiWithAnnotationsInOut":{
      "$id": "#roiWithAnnotationsInOut",
      "description": "Schema defining an roi with associated annotations as input or output",
      "type": "object",
      "allOf": [
        {"$ref": "#/definitions/inputOutput_spine"},
        {
          "properties": {
            "type":{
              "type": "string",
              "enum": ["roiWithAnnotationsInOut"]
            },
            "typeROI":{
              "$ref": "roi.schema.json#/definitions/typeROI"
            },
            "annotations":{
              "type": "array",
              "items": {
                "$ref": "annotationForm.schema.json"
              }
            }
          },
          "required": ["type","typeROI","annotations"]
        }
      ]
    },

    "filter": {
      "$id" : "#filter",
      "description": "Filter for inputs. TO BE DEFINED. This has to deal with dicom fields ...",
      "type": "object"
    },

    "spineInputOuput": {
      "$id" : "#spineInput",
      "description": "SPINE definition for inputs.",
      "oneOf": [
        {"$ref": "#/definitions/imageEntityInOut"},
        {"$ref": "#/definitions/auxiliaryImageFile"},
        {"$ref": "#/definitions/roiInOut"},
        {"$ref": "#/definitions/annotationInOut"},
        {"$ref": "#/definitions/roiWithAnnotationsInOut"},
        {"$ref": "#/definitions/String"},
        {"$ref": "#/definitions/Number"},
        {"$ref": "#/definitions/imageFileInOut"},
        {"$ref": "#/definitions/lookupTableInOut"},
        {"$ref": "#/definitions/annotationTableDefinitionInOut"},
        {"$ref": "#/definitions/annotationTableDataInOut"}
      ]
    }

  }
}
